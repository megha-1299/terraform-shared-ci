name: Terraform EKS Deployment

on:
  workflow_call:
    inputs:
      working_directory:
        required: true
        type: string
      aws_region:
        required: true
        type: string
      aws_role_arn:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      GITHUB_TOKEN:
        required: true

jobs:
  lint:
    name: TFLint Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init

      - name: Run TFLint
        run: tflint ${{ inputs.working_directory }}

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: lint
    environment:
      name: ${{ inputs.environment }}
      url: https://github.com/megha-1299/terraform-eks-infra
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: megha-1299/terraform-eks-infra
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws_role_arn }}
          aws-region: ${{ inputs.aws_region }}

      - name: Terraform Init
        run: terraform -chdir=${{ inputs.working_directory }} init

      - name: Terraform Plan
        run: terraform -chdir=${{ inputs.working_directory }} plan -out=tfplan

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          repository: megha-1299/terraform-eks-infra
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ inputs.aws_role_arn }}
          aws-region: ${{ inputs.aws_region }}

      - name: Terraform Apply
        run: terraform -chdir=${{ inputs.working_directory }} apply tfplan
